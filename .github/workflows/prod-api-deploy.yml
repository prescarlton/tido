name: Deploy Production API

on:
  push:
    branches:
      - main

jobs:
  Deploy:
    name: Build Docker Image
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Get current time
        uses: josStorer/get-current-time@v2
        id: current-time
        with:
          format: 'YY.MM.DD.HH.mm'

      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{secrets.AWS_REGION}}

      - name: Login to Amazon ECR
        id: login-pf-aws-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and push the tagged docker image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-pf-aws-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{secrets.AWS_ECR_REPO}}
          IMAGE_TAG: latest

          PORT: ${{ secrets.PORT }}
          CLERK_SECRET_KEY: ${{ secrets.CLERK_SECRET_KEY }}
          CLERK_PUBLISHABLE_KEY: ${{ secrets.CLERK_PUBLISHABLE_KEY }}
          CLERK_PEM_PUBLIC_KEY: ${{ secrets.CLERK_PEM_PUBLIC_KEY }}
          TWITTER_API_KEY: ${{ secrets.TWITTER_API_KEY }}
          TWITTER_API_SECRET: ${{ secrets.TWITTER_API_SECRET }}
          STRIPE_SK: ${{ secrets.STRIPE_SK }}
          APP_URL: ${{ secrets.APP_URL }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          TWILIO_ACCOUNT_SID: ${{ secrets.TWILIO_ACCOUNT_SID }}
          TWILIO_AUTH_TOKEN: ${{ secrets.TWILIO_AUTH_TOKEN }}
          TWILIO_DEFAULT_PHONE_NUMBER: ${{ secrets.TWILIO_DEFAULT_PHONE_NUMBER }}
          SENDGRID_API_KEY: ${{ secrets.SENDGRID_API_KEY }}
          SENDGRID_DEFAULT_EMAIL: ${{ secrets.SENDGRID_DEFAULT_EMAIL }}
          API_VERSION: ${{ steps.current-time.outputs.formattedTime }}
          CONSTANT_CONTACT_CLIENT_ID: ${{ secrets.CONSTANT_CONTACT_CLIENT_ID }}

        run: |
          docker build \
          -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG \
          --build-arg "PORT=$PORT" \
          --build-arg "CLERK_SECRET_KEY=$CLERK_SECRET_KEY" \
          --build-arg "CLERK_PUBLISHABLE_KEY=$CLERK_PUBLISHABLE_KEY" \
          --build-arg "CLERK_PEM_PUBLIC_KEY=$CLERK_PEM_PUBLIC_KEY" \
          --build-arg "TWITTER_API_KEY=$TWITTER_API_KEY" \
          --build-arg "STRIPE_SK=$STRIPE_SK" \
          --build-arg "APP_URL=$APP_URL" \
          --build-arg "TWITTER_API_SECRET=$TWITTER_API_SECRET" \
          --build-arg "DATABASE_URL=$DATABASE_URL" \
          --build-arg "TWILIO_ACCOUNT_SID=$TWILIO_ACCOUNT_SID" \
          --build-arg "TWILIO_AUTH_TOKEN=$TWILIO_AUTH_TOKEN" \
          --build-arg "TWILIO_DEFAULT_PHONE_NUMBER=$TWILIO_DEFAULT_PHONE_NUMBER" \
          --build-arg "SENDGRID_API_KEY=$SENDGRID_API_KEY" \
          --build-arg "SENDGRID_DEFAULT_EMAIL=$SENDGRID_DEFAULT_EMAIL" \
          --build-arg "API_VERSION=$API_VERSION" \
          --build-arg "CONSTANT_CONTACT_CLIENT_ID=$CONSTANT_CONTACT_CLIENT_ID" \
          -f apps/api/Dockerfile .

          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Force ECS update
        run: aws ecs update-service --cluster ${{ secrets.ECS_CLUSTER }} --service ${{ secrets.ECS_SERVICE }} --force-new-deployment
