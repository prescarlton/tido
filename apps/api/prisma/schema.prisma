generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        String @id @default(nanoid(16))
  username  String @unique
  email     String @default("")
  firstName String @default("") @map("first_name")
  lastName  String @default("") @map("last_name")
  password  String @default("")

  created DateTime @default(now())
  updated DateTime @updatedAt

  projects ProjectMember[]
  tasks    UserTask[]

  @@map("users")
}

model Session {
  id        String   @id
  sid       String   @unique
  data      String   @db.Text
  expiresAt DateTime @map("expires_at")

  @@map("sessions")
}

model UserTask {
  id      String   @id @default(nanoid(24))
  created DateTime @default(now())
  updated DateTime @updatedAt

  user   User   @relation(fields: [userId], references: [id])
  task   Task   @relation(fields: [taskId], references: [id])
  userId String @map("user_id")
  taskId String @map("task_id")

  @@map("user_tasks")
}

model ProjectMember {
  id        String      @id @default(nanoid(24))
  projectId String      @map("project_id")
  userId    String      @map("user_id")
  role      ProjectRole @default(MEMBER)

  project Project @relation(fields: [projectId], references: [id])
  user    User    @relation(fields: [userId], references: [id])

  created DateTime @default(now())
  updated DateTime @updatedAt

  @@map("project_members")
}

model Project {
  id          String @id @default(nanoid(8))
  name        String
  description String @default("")

  created DateTime @default(now())
  updated DateTime @updatedAt

  boards  Board[]
  members ProjectMember[]

  @@map("projects")
}

model Board {
  id        String  @id @default(nanoid(8))
  name      String
  project   Project @relation(fields: [projectId], references: [id])
  projectId String  @map("project_id")

  created DateTime @default(now())
  updated DateTime @updatedAt

  tasks Task[]

  @@map("boards")
}

model Task {
  id       String  @id @default(nanoid(24))
  name     String
  order    Int     @default(0)
  complete Boolean @default(false)

  board Board      @relation(fields: [boardId], references: [id])
  users UserTask[]

  updated DateTime @updatedAt
  created DateTime @default(now())

  boardId String @map("board_id")

  @@map("tasks")
}

enum ProjectRole {
  OWNER  @map("owner")
  ADMIN  @map("admin")
  MEMBER @map("member")
}
